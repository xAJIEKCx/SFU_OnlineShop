from flask import Flask, render_template, request, jsonify
import sqlite3
from datetime import datetime

app = Flask(__name__)

DB_PATH = "shop.db"

# üì¶ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
def get_db():
    conn = sqlite3.connect(DB_PATH)
    conn.row_factory = sqlite3.Row
    return conn

# üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–æ—Ç–¥–∞—ë—Ç index.html –∏–∑ templates/)
@app.route("/")
def index():
    return render_template("index.html")

# üìÅ –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
@app.route("/api/categories", methods=["GET"])
def get_categories():
    conn = get_db()
    cur = conn.cursor()
    cur.execute("SELECT ID_–∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ù–∞–∑–≤–∞–Ω–∏–µ FROM –ö–∞—Ç–µ–≥–æ—Ä–∏—è")
    categories = [dict(row) for row in cur.fetchall()]
    conn.close()
    return jsonify(categories)

# üì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ (–ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–ª–∏ –≤—Å–µ—Ö)
@app.route("/api/products", methods=["GET"])
def get_products():
    category_id = request.args.get("category_id")
    conn = get_db()
    cur = conn.cursor()

    if category_id:
        cur.execute("""
            SELECT ID_—Ç–æ–≤–∞—Ä–∞, –ù–∞–∑–≤–∞–Ω–∏–µ, –¶–µ–Ω–∞, –û–ø–∏—Å–∞–Ω–∏–µ, –†–µ–π—Ç–∏–Ω–≥ 
            FROM –¢–æ–≤–∞—Ä WHERE ID_–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ = ?
        """, (category_id,))
    else:
        cur.execute("""
            SELECT ID_—Ç–æ–≤–∞—Ä–∞, –ù–∞–∑–≤–∞–Ω–∏–µ, –¶–µ–Ω–∞, –û–ø–∏—Å–∞–Ω–∏–µ, –†–µ–π—Ç–∏–Ω–≥ 
            FROM –¢–æ–≤–∞—Ä
        """)

    products = [dict(row) for row in cur.fetchall()]
    conn.close()
    return jsonify(products)

# üë§ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@app.route("/api/register", methods=["POST"])
def register_user():
    data = request.get_json()
    telegram_id = data.get("telegram_id")
    name = data.get("name", "–ë–µ–∑ –∏–º–µ–Ω–∏")

    conn = get_db()
    cur = conn.cursor()
    cur.execute("""
        INSERT OR IGNORE INTO –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (telegram_id, –§–ò–û, –¥–∞—Ç–∞_—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)
        VALUES (?, ?, ?)
    """, (telegram_id, name, datetime.now().isoformat()))
    conn.commit()
    conn.close()

    return jsonify({"status": "ok", "message": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"})

# üõí –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
@app.route("/api/order", methods=["POST"])
def create_order():
    data = request.get_json()
    telegram_id = data.get("telegram_id")
    items = data.get("items", [])

    conn = get_db()
    cur = conn.cursor()

    for item in items:
        cur.execute("""
            INSERT INTO –ü–æ–∫—É–ø–∫–∞ (ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, ID_—Ç–æ–≤–∞—Ä–∞, –î–∞—Ç–∞)
            VALUES (
                (SELECT ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è FROM –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å WHERE telegram_id=?),
                ?, ?
            )
        """, (telegram_id, item["product_id"], datetime.now().isoformat()))

    conn.commit()
    conn.close()

    return jsonify({"status": "ok", "message": "–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω"})

# ‚≠ê –û—Ü–µ–Ω–∫–∞ —Ç–æ–≤–∞—Ä–∞
@app.route("/api/rate", methods=["POST"])
def rate_product():
    data = request.get_json()
    telegram_id = data.get("telegram_id")
    product_id = data.get("product_id")
    rating = data.get("rating")

    conn = get_db()
    cur = conn.cursor()
    cur.execute("""
        INSERT INTO –û—Ü–µ–Ω–∫–∞ (ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, ID_—Ç–æ–≤–∞—Ä–∞, –û—Ü–µ–Ω–∫–∞)
        VALUES (
            (SELECT ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è FROM –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å WHERE telegram_id=?),
            ?, ?
        )
    """, (telegram_id, product_id, rating))

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥ —Ç–æ–≤–∞—Ä–∞
    cur.execute("""
        UPDATE –¢–æ–≤–∞—Ä
        SET –†–µ–π—Ç–∏–Ω–≥ = (SELECT AVG(–û—Ü–µ–Ω–∫–∞) FROM –û—Ü–µ–Ω–∫–∞ WHERE ID_—Ç–æ–≤–∞—Ä–∞ = ?)
        WHERE ID_—Ç–æ–≤–∞—Ä–∞ = ?
    """, (product_id, product_id))

    conn.commit()
    conn.close()

    return jsonify({"status": "ok", "message": "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É!"})

# üìú –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@app.route("/api/orders/<telegram_id>", methods=["GET"])
def get_orders(telegram_id):
    conn = get_db()
    cur = conn.cursor()
    cur.execute("""
        SELECT –¢–æ–≤–∞—Ä.–ù–∞–∑–≤–∞–Ω–∏–µ, –¢–æ–≤–∞—Ä.–¶–µ–Ω–∞, –ü–æ–∫—É–ø–∫–∞.–î–∞—Ç–∞
        FROM –ü–æ–∫—É–ø–∫–∞
        JOIN –¢–æ–≤–∞—Ä ON –¢–æ–≤–∞—Ä.ID_—Ç–æ–≤–∞—Ä–∞ = –ü–æ–∫—É–ø–∫–∞.ID_—Ç–æ–≤–∞—Ä–∞
        JOIN –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ON –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è = –ü–æ–∫—É–ø–∫–∞.ID_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        WHERE –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.telegram_id = ?
        ORDER BY –ü–æ–∫—É–ø–∫–∞.–î–∞—Ç–∞ DESC
    """, (telegram_id,))
    orders = [dict(row) for row in cur.fetchall()]
    conn.close()
    return jsonify(orders)

# üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000, debug=True)
